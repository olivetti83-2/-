#ASIGNAMOS LABEL A TODOS LOS PODS QUE SE CREEN, EN ESTE CASO UNO
#DEFINO CONTENEDOR, LA IMAGEN DE LA QUE PARTE, PUERTOS (EL QUE VIENE POR DEFECTO)
#REFERENCIA EN LAS VARIABLES AL SECRET-DEV

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector: 
    matchLabels:
     app: postgres
  template:
    metadata:
      labels:
        app: postgres       
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
#VOLUMENES, UTILIZA RUTA POR DEFECTO, DEFINO DOS, EL DE LOS DATOS DE LA BBDD
#Y EL DEL SCRIPT QUE SE DEFINE EN EL CONFIGMAP
#EL PRIMER VOLUMEN VARIABLE Y SE DEFINE EL CLAIM QUE ES COMO EL "DISCO DURO"
#SE DAN 5 GIGAS Y TIENE 2  PARA ASIGNAR AL MOTOR DE DATOS POSTGRES
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /docker-entrypoint-initdb.d
              name : init-script
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-claim
        - name: init-script
          configMap:
             name: postgres-init-script-configmap